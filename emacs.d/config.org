* Editorconfig
  #+BEGIN_SRC 
  (editorconfig-mode 1)
  #+END_SRC
* Evil mode
#+BEGIN_SRC emacs-lisp
  (evil-mode 1)
  (evil-ex-define-cmd "q" 'kill-this-buffer)  ; prevent accidentally killing the frame
#+END_SRC

* Tab indents
#+BEGIN_SRC emacs-lisp
  (setq-default tab-width 2)
  (setq-default indent-tabs-mode nil)
  (setq js-indent-level 2)
#+END_SRC

* Reload init.el
#+BEGIN_SRC emacs-lisp
  (defun khzaw/load-init()
    "Reload .emacs.d/init.el"
    (interactive)
    (load-file "~/.emacs.d/init.el"))
#+END_SRC

* Smooth Scrolling
Override Emacs' default scrolling design: jumping half-page. Added "-aggressively" to prevent the cursor to jump around when user scrolls.
#+BEGIN_SRC emacs-lisp
  (smooth-scrolling-mode 1)
  (setq scroll-margin 1
        smooth-scroll-margin 1
        scroll-conservatively 0
        scroll-up-aggressively 0.01
        scroll-down-aggressively 0.01)
  (setq-default scroll-up-aggressively 0.01
                scroll-down-aggressively 0.01)
#+END_SRC

* Start-up
** Maximize frame by default
#+BEGIN_SRC emacs-lisp
     (setq initial-frame-alist (quote ((fullscreen . maximized))))
#+END_SRC

** Better looks and defaults
*** Setting default font
#+BEGIN_SRC emacs-lisp
      (set-face-attribute 'default nil :family "Iosevka" :height 170)
      (set-face-attribute 'fixed-pitch nil :family "IosevkaCC")
      (set-face-attribute 'variable-pitch nil :family "IBM Plex Mono")
#+END_SRC

*** Improving / Cleaning up the UI.
#+BEGIN_SRC emacs-lisp
  (setq inhibit-splash-screen t)
  (setq ring-bell-function 'ignore)
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (blink-cursor-mode t)
  (setq blink-cursor-blinks 0) ;; blink forever
  (setq-default indicate-empty-lines t)
  (setq-default line-spacing 3)
  (setq frame-title-format '("Emacs"))
  (set-window-margins (selected-window) 1 1)
#+END_SRC
*** Typography
#+BEGIN_SRC emacs-lisp
;; (olivetti-mode 1)  ;; Center text in the buffer
;; (flyspell-mode 1)  ;; Catch spelling mistakes
;; (type-mode 1)      ;; Good for symbols like em-dash
#+END_SRC

*** No Backup~ Files
#+BEGIN_SRC emacs-lisp
  (setq make-backup-files nil)
  (setq auto-save-default nil)
  (setq create-lockfiles nil)
#+END_SRC

* Web mode
#+BEGIN_SRC emacs-lisp
(setq web-mode-content-types-alist '(("jsx" . "\\.js[x]?\\'")))
(defun web-mode-init-hook ()
  "Hooks for web mode. Adjust indent."
  (setq web-mode-markup-indent-offset 2))
(add-hook 'web-mode-hook 'web-mode-init-hook)

(defun init-prettier-hook ()
  (add-node-modules-path)
  (prettier-js-mode))

(add-hook 'js-mode-hook 'init-prettier-hook)
#+END_SRC
* Text mode
#+BEGIN_SRC emacs-lisp
(add-hook 'text-mode-hook
(lambda ()
(variable-pitch-mode 1)))
#+END_SRC
