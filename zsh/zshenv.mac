
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# history
export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

# misc
export EDITOR="vim"
export ESHELL=$SHELL
export GREP_OPTIONS="--color=auto"
# don't clear the screen after quitting a manual page
export MANPAGER="less -X"
# highlight section titles in manual pages
export LESS_TERMCAP_md="${yellow}"

# android
export ANDROID_HOME=$HOME/Library/Android/sdk

# python
export PYENV_ROOT="$HOME/.pyenv"
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi


# https://unix.stackexchange.com/questions/71253/what-should-shouldnt-go-in-zshenv-zshrc-zlogin-zprofile-zlogout

# https://unix.stackexchange.com/questions/246751/how-to-know-why-and-where-the-path-env-variable-is-set

if [[ "$OSTYPE" == "darwin"* && -f /etc/zprofile ]]; then
  # everytime mac os updates it puts a file back in /etc/zprofile which overrides $path in .zshenv
  echo "Need sudo to move /etc/zprofile since it will override $path in .zshenv"
  sudo mv /etc/zprofile /etc/zshenv
fi

# path
eval "$(/opt/homebrew/bin/brew shellenv)"

source ~/.orbstack/shell/init.zsh 2>/dev/null || :

# arm gcc, avr-gcc, needed by qmk
path+=("$(brew --prefix)/opt/avr-gcc@8/bin" "$(brew --prefix)/opt/arm-gcc-bin@8/bin")

# go
path+=$(go env GOPATH)/bin

# foundry
path+=$HOME/.foundry/bin

# android
path+=($ANDROID_HOME/tools $ANDROID_HOME/platform-tools)

# pipx
path+=$HOME/.local/bin

path+=/System/Cryptexes/App/usr/bin

# jetbrains toolbox
path+=($HOME/Library/Application Support/JetBrains/Toolbox/scripts)

# personal
path+=($HOME/.bin)

path=($HOME/.cargo/bin $path)


# fnm
path=("$HOME/Library/Cache/fnm_multishells/1425_1670498189025/bin" $path)
export FNM_LOGLEVEL="info"
export FNM_NODE_DIST_MIRROR="https://nodejs.org/dist"
export FNM_ARCH="arm64"
export FNM_MULTISHELL_PATH="$HOME/Library/Caches/fnm_multishells/1425_1670498189025"
export FNM_DIR="$HOME/Library/Application Support/fnm"
export FNM_VERSION_FILE_STRATEGY="local"
autoload -U add-zsh-hook
_fnm_autoload_hook() {
  if [[ -f .node-version || -f .nvmrc ]]; then
    fnm use --silent-if-unchanged
  fi
}

add-zsh-hook chpwd _fnm_autoload_hook \
             && _fnm_autoload_hook
rehash

export PYENV_ROOT="$HOME/.pyenv"
if [ -d "${PYENV_ROOT}" ]; then
  path=$(PYENV_ROOT/bin $path)
  eval "$(pyenv init -)"
fi

export SDKMAN_DIR=$HOME/.sdkman
source "${SDKMAN_DIR}/bin/sdkman-init.sh"
