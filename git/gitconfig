[user]
	name = Kaung Htet
	email = kayhzaw@gmail.com
	signingkey = E16F4D9DCF61C2FE6EB128FE623641659EAE1F12
	# signingkey = 475D8C1DC2D4C9AC
[credential]
	helper = osxkeychain
[github]
	user = khzaw
[mergetool]
	keepBackup = true
[color]
	ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green
  colorMoved = default
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
	co = checkout
	ci = commit
	st = status -s
	br = branch
	undo = reset --soft HEAD^
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%Creset' --abbrev-commit --all
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# Clone a repository including all submodules
	c = clone --recursive
	g = grep --break --heading --line-number
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	amend = commit --amend --resue-message=HEAD
	# List contributors with number of commits
	contributors = shortlog --summary --numbered
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# Remove branches that have already been merged with master
	# a.k.a. ‘delete merged’
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find tags containing commit
	ft = "!f() { git describe --always --contains $1; }; f"

	# Find commits by source code
	fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"
	standup = log --author=\"Kaung Htet Zaw\" --oneline --no-merges --since=1.day
  dif = diff -w --word-diff-regex=[^[:space:]]
[web]
	browser = open
[apply]
	whitespace = fix
[help]
	format = web
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space
	trustctime = false
	commitGraph = true
  pager = delta
  fsmonitor = true
  untrackedCache = true
[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true
[push]
	default = matching
	followTags = true
  autoSetupRemote = true
[grep]
	lineNumber = true
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[diff]
	renames = copies
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
  renames = true
[help]
	autocorrect = 1
[merge]
  conflictstyle = zdiff3
	log = 1000
[rebase]
  autoSquash = true
  autoStash = true
[fetch]
  prune = true
  pruneTags = true
  all = true
[gpg]
  program = /usr/local/MacGPG2/bin/gpg2
[commit]
	template = ~/.stCommitMsg
  verbose = true
[rerere]
	enabled = true
  autoupdate = true
[http]
	sslVerify = false
[init]
	defaultBranch = master
[url "git@github.com:"]
	insteadOf = https://github.com/
[interactive]
  diffFilter = delta --show-syntax-themes --dark
[delta]
  hyperlinks = true
  side-by-side = true
  navigate = true # use n and N to move between diff sections
  light = false # set to true if you're in a terminal w/ a light background color.
  line-numbers = true
[delta "magit-delta"]
  line-numbers = false
[column]
  ui = auto
[tag]
  sort = versin:refname
